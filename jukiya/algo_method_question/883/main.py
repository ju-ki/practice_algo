"""
https://algo-method.com/tasks/883

### 問題文
コンピュータが計算しやすいように順序づけられた数式の $1$ つに逆ポーランド記法 (後置記法) があります。
私たちが普段使っている中置記法では `+`, `-`, `*`, `/` といった演算子は数字と数字の間に置かれます。
しかし、逆ポーランド記法ではこれらの演算子が対応する数字の後ろに置かれます。
例えば、逆ポーランド記法で書かれた `1 2 + 3 4 - *` という数式は次のように計算できます。
- `1` と `2` を記録する。記録した順に `1`, `2` が残っている
- `+` が現れたので、最近記録した数字 $2$ つを取り出し計算する。この結果、`1`, `2` が取り出され $1 + 2 = $ `3` が記録される
- `3` と `4` を記録する。記録した順に `3`, `3`, `4` が残っている
- `-` が現れたので、最近記録した数字 $2$ つを取り出し計算する。この結果、`3`, `4` が取り出され $3 - 4 = $ `-1` が記録される
- 現在、記録した順に `3`, `-1` が残っている
- `*` が現れたので、最近記録した数字 $2$ つを取り出し計算する。この結果、`3`, `-1` が取り出され $3 * (-1) = $ `-3` が記録される
- これで式は終わりのため、答えは `-3` である
なお、以上の流れを追っていくことで、この数式は中置記法で $(1 + 2) * (3 - 4)$ と表される数式に対応していることが分かります。
----
中置記法で書かれた数式 $X$ と、$X$ に対応する逆ポーランド記法に直すことで得られる長さ $N$ の列 $S = (S_0, S_1, \ldots, S_{N-1})$ が与えられます。
$S$ を利用して数式 $X$ の計算結果を求めるプログラムを作成してください。
ただし、簡単のため**入力には除算 `/` が含まれません**。
### 入力
入力は次の形式で与えられます。
```IOExample
$X$
$N$
$S_0 S_1 S_2 \ldots S_{N-1}$
```
また、入力される値は次の制約を満たします。
- $X$ は `0`$\ldots$`9`, `+`, `-`, `*`, `(`, `)` からなる数式
- $N$ は $1$ 以上 $100$ 以下の整数
- $S$ は $X$ を逆ポーランド記法に直して得られる
- $S_i$ は 次のうちいずれか $(0 \leq i \leq N-1)$
    - $1$ 以上 $100$ 以下の整数
    - `+`, `-`, `*` のいずれかの文字
### 出力
答えを次の形式で出力してください。
```Statement
$X=$ ($S$ を用いた計算結果)
```
ただし、答えや計算途中に出てくる数字は $-10^9$ 以上 $10^9$ 以下の整数となることが保証されています。
"""

X = input()
N = int(input())
S = list(map(str, input().split()))


numbers = []
for s in S:
    if s == "+" or s == "-" or s == "*":
        s2 = numbers.pop()
        s1 = numbers.pop()

        if s == "+":
            numbers.append(s1 + s2)
        elif s == "-":
            numbers.append(s1 - s2)
        elif s == "*":
            numbers.append(s1 * s2)
    else:
        numbers.append(int(s))


answer = numbers.pop()
print(f'{X}={answer}')
